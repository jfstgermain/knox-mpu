{"ts":1355781955046,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var _ = require('lodash'),\n    EventEmitter = require('events').EventEmitter,\n    Batch = require('batch'),\n    fs = require('fs'),\n    path = require('path'),\n    os = require('os'),\n    util = require('util'),\n    parse = require('./parse');\n\n/**\n * Initializes a Amazon S3 Multi part file upload with the given options\n */\nfunction MultiPartUpload(opts, callback) {\n    if (!opts.client || !opts.objectName) {\n        throw new Error('MultiPart upload must be created from a client and provide a object name');\n    }\n    \n    if (!opts.stream && !opts.file) {\n        throw new Error('MultiPart upload must be passed either a stream or file parameter');\n    }\n    \n    if (opts.stream && opts.file) {\n        throw new Error('You cannot provide both a stream and a file to upload');\n    }\n \n    this.objectName = opts.objectName;\n    this.headers = opts.headers || {};\n    this.client = opts.client;\n    this.partSize = opts.partSize || 5242880; // 5MB default\n    this.uploadId = null;\n    this.uploads = new Batch();\n    \n    if (opts.stream) {\n        this._putStream(opts.stream, callback);\n    } else {\n        this._putFile(opts.file, callback);\n    }\n    \n}\nutil.inherits(MultiPartUpload, EventEmitter);\n\n/**\n * Attempts to initiate the MultiPartUpload request (gets the upload ID)\n */\nMultiPartUpload.prototype._initiate = function(callback) {\n    // Send the initiate request\n    var req = this.client.request('POST', this.objectName + '?uploads', this.headers),\n        mpu = this;\n        \n    // Handle the xml response\n    parse.xmlResponse(req, function(err, body) {\n        \n        if (err) return callback(err);        \n        if (!body.UploadId) return callback('Invalid upload ID');\n\n        mpu.uploadId = body.UploadId;\n        mpu.emit('initiated', body.UploadId);\n        return callback(null, body.UploadId);\n    });\n\n    req.end();\n}\n\n/**\n * Streams a file to S3 using a multipart form upload\n *\n * Divides the file into separate files, and then writes them to Amazon S3\n */\nMultiPartUpload.prototype._putFile = function(file, callback) {\n    if (!file) return callback('Invalid file');\n    \n    var mpu = this;\n    \n    fs.exists(file, function(exists) {\n        if (!exists) {\n            return callback('File does not exist');\n        }\n        \n        var stream = fs.createReadStream(file);\n        mpu._putStream(stream, callback);\n    });\n}\n\n/**\n * Streams a stream to S3 using a multipart form upload.\n * \n * It will attempt to initialize the upload (if not already started), read the stream in, \n * write the stream to a temporary file of the given partSize, and then start uploading a part\n * each time a part is available\n */\nMultiPartUpload.prototype._putStream = function(stream, callback) {  \n  \n    if (!stream) return callback('Invalid stream');\n\n    var mpu = this;\n\n    if (!this.uploadId) {\n        this._initiate(function(err, uploadId) {\n            if (err || !uploadId) return callback('Unable to initiate stream upload');\n        });    \n    } \n    // Start handling the stream straight away\n    mpu._handleStream(stream, callback);\n}\n\n/**\n  Handles an incoming stream, divides it into parts, and uploads it to S3\n **/\nMultiPartUpload.prototype._handleStream = function(stream, callback) {\n\n    var mpu = this, \n        parts = [], \n        current;\n\n    // Create a new part\n    function newPart() {\n        var partId = parts.length + 1,\n            partFileName = path.resolve(path.join(os.tmpDir(), 'mpu-' + (mpu.uploadId || Date.now()) + '-' + partId)),\n            partFile = fs.createWriteStream(partFileName),\n            part = {\n                id: partId,\n                stream: partFile,\n                fileName: partFileName,\n                length: 0\n            };\n\n        parts.push(part);\n        return part;\n    }\n\n    function partReady(part) {\n        if (!part) return\n\n        // Ensure the stream is closed\n        if (part.stream.writable) {\n            part.stream.end();\n        }\n        mpu.uploads.push(mpu._uploadPart.bind(mpu, part));\n    }\n\n    // Handle the data coming in\n    stream.on('data', function(buffer) {\n        if (!current) {\n            current = newPart();\n        }\n\n        current.stream.write(buffer);\n        current.length += buffer.length;\n\n        // Check if we have a part\n        if (current.length >= mpu.partSize) {\n            partReady(current);\n            current = null;\n        }\n    });\n\n    // Handle the end of the stream\n    stream.on('end', function() {\n        if (current) {\n            partReady(current);\n        }\n        \n        // Wait for the completion of the uploads\n        return mpu._completeUploads(callback);\n    });\n\n    // Handle errors\n    stream.on('error', function(err) {\n        // Clean up\n        return callback(err);\n    });\n}\n\n/**\n  Uploads a part, or if we are not ready yet, waits for the upload to be initiated\n  and will then upload\n **/\nMultiPartUpload.prototype._uploadPart = function(part, callback) {    \n    \n    // If we haven't started the upload yet, wait for the initialization\n    if (!this.uploadId) {\n      return this.on('initiated', this._uploadPart.bind(this, part, callback));\n    }\n\n    var url = this.objectName + '?partNumber=' + part.id + '&uploadId=' + this.uploadId,\n        headers = { 'Content-Length': part.length },\n        req = this.client.request('PUT', url, headers),\n        partStream = fs.createReadStream(part.fileName),\n        mpu = this;\n\n    // Wait for the upload to complete\n    req.on('response', function(res) { \n        if (res.statusCode != 200) return callback({part: part.id, message: 'Upload failed'});\n        \n        // Grab the etag and return it\n        var etag = res.headers['etag'],\n            result = {part: part.id, etag: etag, size: part.length};\n        \n        mpu.emit('uploaded', result);\n        \n        // Remove the temporary file\n        fs.unlink(part.fileName, function(err) {\n            return callback(err, result);\n        });        \n    });\n    \n    // Handle errors\n    req.on('error', function(err) {\n        var result = {part: part.id, message: err};\n        mpu.emit('failed', result);\n        return callback(result);\n    });\n      \n    partStream.pipe(req);\n    mpu.emit('uploading', part.id);\n}\n\n/**\n  Indicates that all uploads have been started and that we should wait for completion\n **/\nMultiPartUpload.prototype._completeUploads = function(callback) {    \n    \n    var mpu = this;    \n\n    this.uploads.end(function(err, results) {\n        \n        if (err) return callback(err);\n        \n        var size = 0, parts, body;\n        parts = _.map(results, function(value) {\n            size += value.size;\n            return util.format('<Part><PartNumber>%d</PartNumber><ETag>%s</ETag></Part>', value.part, value.etag);\n        }).join('');\n        \n        var req = mpu.client.request('POST', mpu.objectName + '?uploadId=' + mpu.uploadId);\n        \n        // Register the response handler\n        parse.xmlResponse(req, function(err, body) {\n            if (err) return callback(err);        \n            delete body.$;\n            body.size = size;\n            mpu.emit('completed', body);\n            return callback(null, body);\n        });\n        \n        // Write the request\n        req.write('<CompleteMultipartUpload>' + parts + '</CompleteMultipartUpload>');\n        req.end();\n    });    \n}\n\nmodule.exports = MultiPartUpload;"]],"start1":0,"start2":0,"length1":0,"length2":7392}]],"length":7392}
{"contributors":[],"silentsave":false,"ts":1355782322752,"patch":[[{"diffs":[[0,"client;\n"],[1,"    this.bufferType = opts.bufferType || 'file';\n"],[0,"    this"]],"start1":895,"start2":895,"length1":16,"length2":65},{"diffs":[[0,"t;\n\n"],[-1,"    // Create a new part\n"],[0,"    "]],"start1":3351,"start2":3351,"length1":33,"length2":8},{"diffs":[[0,"function new"],[1,"File"],[0,"Part() {\n   "]],"start1":3359,"start2":3359,"length1":24,"length2":28},{"diffs":[[0,"    };\n\n"],[-1,""],[0,"        "]],"start1":3758,"start2":3758,"length1":16,"length2":16},{"diffs":[[0," part;\n    }"],[1,"\n    \n    function newMemoryPart() {\n        var partId = parts.length + 1,\n            partFileName = path.resolve(path.join(os.tmpDir(), 'mpu-' + (mpu.uploadId || Date.now()) + '-' + partId)),\n            partFile = fs.createWriteStream(partFileName),\n            part = {\n                id: partId,\n                stream: partFile,\n                fileName: partFileName,\n                length: 0\n            };\n\n        parts.push(part);\n        return part;\n    }\n    // Create a new part\n    function newPart() {\n        var part;\n        if (opts.bufferType == 'file') {\n            part = newFilePart();\n        }\n        else {\n            part = newMemoryPart();\n        }\n        \n        return part;\n    }"],[0,"\n\n    functi"]],"start1":3806,"start2":3806,"length1":24,"length2":745}]],"length":8141,"saved":false}
{"ts":1355783978441,"patch":[[{"diffs":[[0,"part"],[-1,"FileName = path.resolve(path.join(os.tmpDir(), 'mpu-' + (mpu.uploadId || Date.now()) + '-' + partId)),\n            partFile = fs.createWriteStream(partFileName),"],[1,"Buffer = new Buffer();"],[0,"\n   "]],"start1":3906,"start2":3906,"length1":169,"length2":30},{"diffs":[[0,"part;\n    }\n"],[1,"    \n    var newPart;\n    \n    if (this.bufferType == 'file') {\n        newPart = newFilePart;\n    }\n    else {\n        newPart = newMemoryPart;\n    }\n    /*\n"],[0,"    // Creat"]],"start1":4139,"start2":4139,"length1":24,"length2":182},{"diffs":[[0,"    if ("],[-1,"opt"],[1,"thi"],[0,"s.buffer"]],"start1":4381,"start2":4381,"length1":19,"length2":19},{"diffs":[[0,"n part;\n"],[-1,""],[0,"    }"],[1,"*/"],[0,"\n\n    fu"]],"start1":4545,"start2":4545,"length1":21,"length2":23}]],"length":8162,"saved":false}
{"ts":1355784023805,"patch":[[{"diffs":[[0,"/parse')"],[1,",\n    bufferstream = require('bufferstream')"],[0,";\n\n/**\n "]],"start1":234,"start2":234,"length1":16,"length2":60}]],"length":8206,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357773441235,"patch":[[{"diffs":[[0,"e('lodash'),"],[1,"\r"],[0,"\n    EventEm"]],"start1":14,"start2":14,"length1":24,"length2":25},{"diffs":[[0,"Emitter,"],[1,"\r"],[0,"\n    Bat"]],"start1":70,"start2":70,"length1":16,"length2":17},{"diffs":[[0,"re('batch'),"],[1,"\r"],[0,"\n    fs = re"]],"start1":97,"start2":97,"length1":24,"length2":25},{"diffs":[[0,"quire('fs'),"],[1,"\r"],[0,"\n    path = "]],"start1":122,"start2":122,"length1":24,"length2":25},{"diffs":[[0,"'path'),"],[1,"\r"],[0,"\n    os "]],"start1":155,"start2":155,"length1":16,"length2":17},{"diffs":[[0,"e('os'),"],[1,"\r"],[0,"\n    uti"]],"start1":180,"start2":180,"length1":16,"length2":17},{"diffs":[[0,"'util'),"],[1,"\r"],[0,"\n    par"]],"start1":209,"start2":209,"length1":16,"length2":17},{"diffs":[[0,"se')"],[-1,",\n    bufferstream = require('bufferstream');\n"],[1,";\r\n\r"],[0,"\n/**"],[1,"\r"],[0,"\n * "]],"start1":245,"start2":245,"length1":58,"length2":17},{"diffs":[[0," options"],[1,"\r"],[0,"\n */"],[1,"\r"],[0,"\nfunctio"]],"start1":323,"start2":323,"length1":20,"length2":22},{"diffs":[[0,"pts, callback) {"],[1,"\r"],[0,"\n    if (!opts.c"]],"start1":364,"start2":364,"length1":32,"length2":33},{"diffs":[[0,"bjectName) {"],[1,"\r"],[0,"\n        thr"]],"start1":413,"start2":413,"length1":24,"length2":25},{"diffs":[[0," name');"],[1,"\r"],[0,"\n    }"],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n    if "]],"start1":519,"start2":519,"length1":27,"length2":30},{"diffs":[[0,"&& !opts.file) {"],[1,"\r"],[0,"\n        throw n"]],"start1":563,"start2":563,"length1":32,"length2":33},{"diffs":[[0,"meter');"],[1,"\r"],[0,"\n    }"],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n    if "]],"start1":666,"start2":666,"length1":27,"length2":30},{"diffs":[[0,"opts.file) {"],[1,"\r"],[0,"\n        thr"]],"start1":712,"start2":712,"length1":24,"length2":25},{"diffs":[[0,"pload');"],[1,"\r"],[0,"\n    }"],[1,"\r"],[0,"\n "],[1,"\r"],[0,"\n    thi"]],"start1":799,"start2":799,"length1":24,"length2":27},{"diffs":[[0,"ectName;"],[1,"\r"],[0,"\n    thi"]],"start1":849,"start2":849,"length1":16,"length2":17},{"diffs":[[0,"s || {};"],[1,"\r"],[0,"\n    thi"]],"start1":889,"start2":889,"length1":16,"length2":17},{"diffs":[[0,"ent;"],[-1,"\n    this.bufferType = opts.bufferType || 'file';"],[1,"\r"],[0,"\n   "]],"start1":925,"start2":925,"length1":57,"length2":9},{"diffs":[[0," default"],[1,"\r"],[0,"\n    thi"]],"start1":983,"start2":983,"length1":16,"length2":17},{"diffs":[[0,"adId = null;"],[1,"\r"],[0,"\n    this.up"]],"start1":1006,"start2":1006,"length1":24,"length2":25},{"diffs":[[0,"Batch();"],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n    if "]],"start1":1043,"start2":1043,"length1":21,"length2":23},{"diffs":[[0,"tream) {"],[1,"\r"],[0,"\n       "]],"start1":1073,"start2":1073,"length1":16,"length2":17},{"diffs":[[0,", callback);"],[1,"\r"],[0,"\n    } else "]],"start1":1118,"start2":1118,"length1":24,"length2":25},{"diffs":[[0,"    } else {"],[1,"\r"],[0,"\n        thi"]],"start1":1132,"start2":1132,"length1":24,"length2":25},{"diffs":[[0,"ck);"],[1,"\r"],[0,"\n    }"],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n}"],[1,"\r"],[0,"\nuti"]],"start1":1185,"start2":1185,"length1":21,"length2":25},{"diffs":[[0,"mitter);"],[-1,"\n"],[1,"\r\n\r"],[0,"\n/**"],[1,"\r"],[0,"\n * Atte"]],"start1":1244,"start2":1244,"length1":21,"length2":24},{"diffs":[[0,"load ID)"],[1,"\r"],[0,"\n */"],[1,"\r"],[0,"\nMultiPa"]],"start1":1325,"start2":1325,"length1":20,"length2":22},{"diffs":[[0,"(callback) {"],[1,"\r"],[0,"\n    // Send"]],"start1":1386,"start2":1386,"length1":24,"length2":25},{"diffs":[[0,"iate request"],[1,"\r"],[0,"\n    var req"]],"start1":1420,"start2":1420,"length1":24,"length2":25},{"diffs":[[0,", this.headers),"],[1,"\r"],[0,"\n        mpu = t"]],"start1":1504,"start2":1504,"length1":32,"length2":33},{"diffs":[[0," mpu = this;"],[1,"\r"],[0,"\n        \n  "]],"start1":1529,"start2":1529,"length1":24,"length2":25},{"diffs":[[0,"s;\r\n        "],[1,"\r"],[0,"\n    // Hand"]],"start1":1539,"start2":1539,"length1":24,"length2":25},{"diffs":[[0,"response"],[1,"\r"],[0,"\n    par"]],"start1":1575,"start2":1575,"length1":16,"length2":17},{"diffs":[[0,"ion(err, body) {"],[1,"\r"],[0,"\n        \n      "]],"start1":1617,"start2":1617,"length1":32,"length2":33},{"diffs":[[0,"ody) {\r\n        "],[1,"\r"],[0,"\n        if (err"]],"start1":1627,"start2":1627,"length1":32,"length2":33},{"diffs":[[0,"ck(err);        "],[1,"\r"],[0,"\n        if (!bo"]],"start1":1675,"start2":1675,"length1":32,"length2":33},{"diffs":[[0,"ad ID');"],[-1,"\n"],[1,"\r\n\r"],[0,"\n       "]],"start1":1750,"start2":1750,"length1":17,"length2":19},{"diffs":[[0,"ploadId;"],[1,"\r"],[0,"\n       "]],"start1":1791,"start2":1791,"length1":16,"length2":17},{"diffs":[[0," body.UploadId);"],[1,"\r"],[0,"\n        return "]],"start1":1830,"start2":1830,"length1":32,"length2":33},{"diffs":[[0,"loadId);"],[1,"\r"],[0,"\n    });"],[-1,"\n"],[1,"\r\n\r"],[0,"\n    req"]],"start1":1885,"start2":1885,"length1":25,"length2":28},{"diffs":[[0,"q.end();"],[1,"\r"],[0,"\n}"],[-1,"\n"],[1,"\r\n\r"],[0,"\n/**"],[1,"\r"],[0,"\n * Stre"]],"start1":1912,"start2":1912,"length1":23,"length2":27},{"diffs":[[0,"m upload"],[1,"\r"],[0,"\n *"],[1,"\r"],[0,"\n * Divi"]],"start1":1977,"start2":1977,"length1":19,"length2":21},{"diffs":[[0,"mazon S3"],[1,"\r"],[0,"\n */"],[1,"\r"],[0,"\nMultiPa"]],"start1":2057,"start2":2057,"length1":20,"length2":22},{"diffs":[[0,"lback) {"],[1,"\r"],[0,"\n    if "]],"start1":2127,"start2":2127,"length1":16,"length2":17},{"diffs":[[0," file');"],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n    var"]],"start1":2176,"start2":2176,"length1":21,"length2":23},{"diffs":[[0," = this;"],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n    fs."]],"start1":2203,"start2":2203,"length1":21,"length2":23},{"diffs":[[0,"nction(exists) {"],[1,"\r"],[0,"\n        if (!ex"]],"start1":2241,"start2":2241,"length1":32,"length2":33},{"diffs":[[0," (!exists) {"],[1,"\r"],[0,"\n           "]],"start1":2269,"start2":2269,"length1":24,"length2":25},{"diffs":[[0,"exist');"],[1,"\r"],[0,"\n       "]],"start1":2326,"start2":2326,"length1":16,"length2":17},{"diffs":[[0,"st');\r\n        }"],[1,"\r"],[0,"\n        \n      "]],"start1":2329,"start2":2329,"length1":32,"length2":33},{"diffs":[[0,"     }\r\n        "],[1,"\r"],[0,"\n        var str"]],"start1":2339,"start2":2339,"length1":32,"length2":33},{"diffs":[[0,"m(file);"],[1,"\r"],[0,"\n       "]],"start1":2396,"start2":2396,"length1":16,"length2":17},{"diffs":[[0,"llback);"],[1,"\r"],[0,"\n    });"],[1,"\r"],[0,"\n}"],[-1,"\n"],[1,"\r\n\r"],[0,"\n/**"],[1,"\r"],[0,"\n * Stre"]],"start1":2439,"start2":2439,"length1":31,"length2":36},{"diffs":[[0," upload."],[1,"\r"],[0,"\n * "],[1,"\r"],[0,"\n * It w"]],"start1":2516,"start2":2516,"length1":20,"length2":22},{"diffs":[[0,"eam in, "],[1,"\r"],[0,"\n * writ"]],"start1":2613,"start2":2613,"length1":16,"length2":17},{"diffs":[[0,"g a part"],[1,"\r"],[0,"\n * each"]],"start1":2709,"start2":2709,"length1":16,"length2":17},{"diffs":[[0,"vailable"],[1,"\r"],[0,"\n */"],[1,"\r"],[0,"\nMultiPa"]],"start1":2743,"start2":2743,"length1":20,"length2":22},{"diffs":[[0,"ack) {  "],[1,"\r"],[0,"\n  "],[1,"\r"],[0,"\n    if "]],"start1":2819,"start2":2819,"length1":19,"length2":21},{"diffs":[[0,"tream');"],[-1,"\n"],[1,"\r\n\r"],[0,"\n    var"]],"start1":2876,"start2":2876,"length1":17,"length2":19},{"diffs":[[0," mpu = this;"],[-1,"\n"],[1,"\r\n\r"],[0,"\n    if (!th"]],"start1":2895,"start2":2895,"length1":25,"length2":27},{"diffs":[[0,"this.uploadId) {"],[1,"\r"],[0,"\n        this._i"]],"start1":2920,"start2":2920,"length1":32,"length2":33},{"diffs":[[0," uploadId) {"],[1,"\r"],[0,"\n           "]],"start1":2974,"start2":2974,"length1":24,"length2":25},{"diffs":[[0,"pload');"],[1,"\r"],[0,"\n       "]],"start1":3066,"start2":3066,"length1":16,"length2":17},{"diffs":[[0," });    "],[1,"\r"],[0,"\n    } "],[1,"\r"],[0,"\n    // "]],"start1":3083,"start2":3083,"length1":23,"length2":25},{"diffs":[[0,"ght away"],[1,"\r"],[0,"\n    mpu"]],"start1":3139,"start2":3139,"length1":16,"length2":17},{"diffs":[[0,"llback);"],[1,"\r"],[0,"\n}"],[-1,"\n"],[1,"\r\n\r"],[0,"\n/**"],[1,"\r"],[0,"\n  Handl"]],"start1":3181,"start2":3181,"length1":23,"length2":27},{"diffs":[[0,"it to S3"],[1,"\r"],[0,"\n **/"],[1,"\r"],[0,"\nMultiPa"]],"start1":3266,"start2":3266,"length1":21,"length2":23},{"diffs":[[0,"lback) {"],[-1,"\n"],[1,"\r\n\r"],[0,"\n    var"]],"start1":3344,"start2":3344,"length1":17,"length2":19},{"diffs":[[0,"= this, "],[1,"\r"],[0,"\n       "]],"start1":3368,"start2":3368,"length1":16,"length2":17},{"diffs":[[0,"s = [], "],[1,"\r"],[0,"\n       "]],"start1":3390,"start2":3390,"length1":16,"length2":17},{"diffs":[[0,"current;"],[-1,"\n"],[1,"\r\n\r\n    // Create a new part\r"],[0,"\n    fun"]],"start1":3408,"start2":3408,"length1":17,"length2":45},{"diffs":[[0," new"],[-1,"File"],[0,"Part() {"],[1,"\r"],[0,"\n   "]],"start1":3458,"start2":3458,"length1":20,"length2":17},{"diffs":[[0,"arts.length + 1,"],[1,"\r"],[0,"\n            par"]],"start1":3494,"start2":3494,"length1":32,"length2":33},{"diffs":[[0,"artId)),"],[1,"\r"],[0,"\n       "]],"start1":3622,"start2":3622,"length1":16,"length2":17},{"diffs":[[0,"m(partFileName),"],[1,"\r"],[0,"\n            par"]],"start1":3674,"start2":3674,"length1":32,"length2":33},{"diffs":[[0,"        part = {"],[1,"\r"],[0,"\n               "]],"start1":3696,"start2":3696,"length1":32,"length2":33},{"diffs":[[0,"     id: partId,"],[1,"\r"],[0,"\n               "]],"start1":3725,"start2":3725,"length1":32,"length2":33},{"diffs":[[0,"tream: partFile,"],[1,"\r"],[0,"\n               "]],"start1":3760,"start2":3760,"length1":32,"length2":33},{"diffs":[[0,"e: partFileName,"],[1,"\r"],[0,"\n               "]],"start1":3801,"start2":3801,"length1":32,"length2":33},{"diffs":[[0,"       length: 0"],[1,"\r"],[0,"\n            };\n"]],"start1":3828,"start2":3828,"length1":32,"length2":33},{"diffs":[[0,"\r\n            };"],[-1,"\n"],[1,"\r\n\r"],[0,"\n        parts.p"]],"start1":3844,"start2":3844,"length1":33,"length2":35},{"diffs":[[0,"arts.push(part);"],[1,"\r"],[0,"\n        return "]],"start1":3873,"start2":3873,"length1":32,"length2":33},{"diffs":[[0,"art;"],[1,"\r"],[0,"\n    }"],[-1,"\n    \n    function newMemoryPart() {\n        var partId = parts.length + 1,\n            partBuffer = new Buffer();\n            part = {\n                id: partId,\n                stream: partFile,\n                fileName: partFileName,\n                length: 0\n            };\n\n        parts.push(part);\n        return part;\n    }\n    \n    var newPart;\n    \n    if (this.bufferType == 'file') {\n        newPart = newFilePart;\n    }\n    else {\n        newPart = newMemoryPart;\n    }\n    /*\n    // Create a new part\n    function newPart() {\n        var part;\n        if (this.bufferType == 'file') {\n            part = newFilePart();\n        }\n        else {\n            part = newMemoryPart();\n        }\n        \n        return part;\n    }*/\n"],[1,"\r\n\r"],[0,"\n   "]],"start1":3907,"start2":3907,"length1":757,"length2":18},{"diffs":[[0,"eady(part) {"],[1,"\r"],[0,"\n        if "]],"start1":3940,"start2":3940,"length1":24,"length2":25},{"diffs":[[0,") return"],[-1,"\n"],[1,"\r\n\r"],[0,"\n       "]],"start1":3971,"start2":3971,"length1":17,"length2":19},{"diffs":[[0,"s closed"],[1,"\r"],[0,"\n       "]],"start1":4013,"start2":4013,"length1":16,"length2":17},{"diffs":[[0,".writable) {"],[1,"\r"],[0,"\n           "]],"start1":4046,"start2":4046,"length1":24,"length2":25},{"diffs":[[0,"tream.end();"],[1,"\r"],[0,"\n        }\n "]],"start1":4078,"start2":4078,"length1":24,"length2":25},{"diffs":[[0,"nd();\r\n        }"],[1,"\r"],[0,"\n        mpu.upl"]],"start1":4085,"start2":4085,"length1":32,"length2":33},{"diffs":[[0," part));"],[1,"\r"],[0,"\n    }"],[-1,"\n"],[1,"\r\n\r"],[0,"\n    // "]],"start1":4153,"start2":4153,"length1":23,"length2":26},{"diffs":[[0,"oming in"],[1,"\r"],[0,"\n    str"]],"start1":4196,"start2":4196,"length1":16,"length2":17},{"diffs":[[0,"on(buffer) {"],[1,"\r"],[0,"\n        if "]],"start1":4234,"start2":4234,"length1":24,"length2":25},{"diffs":[[0," if (!current) {"],[1,"\r"],[0,"\n            cur"]],"start1":4255,"start2":4255,"length1":32,"length2":33},{"diffs":[[0,"wPart();"],[1,"\r"],[0,"\n       "]],"start1":4297,"start2":4297,"length1":16,"length2":17},{"diffs":[[0,";\r\n        }"],[-1,"\n"],[1,"\r\n\r"],[0,"\n        cur"]],"start1":4304,"start2":4304,"length1":25,"length2":27},{"diffs":[[0,"buffer);"],[1,"\r"],[0,"\n       "]],"start1":4349,"start2":4349,"length1":16,"length2":17},{"diffs":[[0,".length;"],[-1,"\n"],[1,"\r\n\r"],[0,"\n       "]],"start1":4391,"start2":4391,"length1":17,"length2":19},{"diffs":[[0,"e a part"],[1,"\r"],[0,"\n       "]],"start1":4429,"start2":4429,"length1":16,"length2":17},{"diffs":[[0,".partSize) {"],[1,"\r"],[0,"\n           "]],"start1":4472,"start2":4472,"length1":24,"length2":25},{"diffs":[[0,"tReady(current);"],[1,"\r"],[0,"\n            cur"]],"start1":4501,"start2":4501,"length1":32,"length2":33},{"diffs":[[0," = null;"],[1,"\r"],[0,"\n       "]],"start1":4538,"start2":4538,"length1":16,"length2":17},{"diffs":[[0,"       }"],[1,"\r"],[0,"\n    });"],[-1,"\n"],[1,"\r\n\r"],[0,"\n    // "]],"start1":4549,"start2":4549,"length1":25,"length2":28},{"diffs":[[0,"e stream"],[1,"\r"],[0,"\n    str"]],"start1":4597,"start2":4597,"length1":16,"length2":17},{"diffs":[[0,"tion() {"],[1,"\r"],[0,"\n       "]],"start1":4632,"start2":4632,"length1":16,"length2":17},{"diffs":[[0,"rrent) {"],[1,"\r"],[0,"\n       "]],"start1":4656,"start2":4656,"length1":16,"length2":17},{"diffs":[[0,"urrent);"],[1,"\r"],[0,"\n       "]],"start1":4689,"start2":4689,"length1":16,"length2":17},{"diffs":[[0,"       }"],[1,"\r"],[0,"\n       "]],"start1":4700,"start2":4700,"length1":16,"length2":17},{"diffs":[[0,"     }\r\n        "],[1,"\r"],[0,"\n        // Wait"]],"start1":4702,"start2":4702,"length1":32,"length2":33},{"diffs":[[0," uploads"],[1,"\r"],[0,"\n       "]],"start1":4761,"start2":4761,"length1":16,"length2":17},{"diffs":[[0,"llback);"],[1,"\r"],[0,"\n    });"],[-1,"\n"],[1,"\r\n\r"],[0,"\n    // "]],"start1":4809,"start2":4809,"length1":25,"length2":28},{"diffs":[[0,"andle errors"],[1,"\r"],[0,"\n    stream."]],"start1":4838,"start2":4838,"length1":24,"length2":25},{"diffs":[[0," function(err) {"],[1,"\r"],[0,"\n        // Clea"]],"start1":4874,"start2":4874,"length1":32,"length2":33},{"diffs":[[0,"Clean up"],[1,"\r"],[0,"\n       "]],"start1":4903,"start2":4903,"length1":16,"length2":17},{"diffs":[[0,"rr);"],[1,"\r"],[0,"\n    });"],[1,"\r"],[0,"\n}"],[-1,"\n"],[1,"\r\n\r"],[0,"\n/**"],[1,"\r"],[0,"\n  U"]],"start1":4938,"start2":4938,"length1":23,"length2":28},{"diffs":[[0,"nitiated"],[1,"\r"],[0,"\n  and w"]],"start1":5037,"start2":5037,"length1":16,"length2":17},{"diffs":[[0,"n upload"],[1,"\r"],[0,"\n **/"],[1,"\r"],[0,"\nMultiPa"]],"start1":5061,"start2":5061,"length1":21,"length2":23},{"diffs":[[0,"lback) {    "],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n    // If w"]],"start1":5135,"start2":5135,"length1":29,"length2":31},{"diffs":[[0,"lization"],[1,"\r"],[0,"\n    if "]],"start1":5219,"start2":5219,"length1":16,"length2":17},{"diffs":[[0,"oadId) {"],[1,"\r"],[0,"\n      r"]],"start1":5246,"start2":5246,"length1":16,"length2":17},{"diffs":[[0,"k));"],[1,"\r"],[0,"\n    }"],[-1,"\n"],[1,"\r\n\r"],[0,"\n   "]],"start1":5331,"start2":5331,"length1":15,"length2":18},{"diffs":[[0,"ploadId,"],[1,"\r"],[0,"\n       "]],"start1":5426,"start2":5426,"length1":16,"length2":17},{"diffs":[[0,"ength },"],[1,"\r"],[0,"\n       "]],"start1":5480,"start2":5480,"length1":16,"length2":17},{"diffs":[[0,"eaders),"],[1,"\r"],[0,"\n       "]],"start1":5537,"start2":5537,"length1":16,"length2":17},{"diffs":[[0,"leName),"],[1,"\r"],[0,"\n       "]],"start1":5595,"start2":5595,"length1":16,"length2":17},{"diffs":[[0," = this;"],[-1,"\n"],[1,"\r\n\r"],[0,"\n    // "]],"start1":5616,"start2":5616,"length1":17,"length2":19},{"diffs":[[0,"complete"],[1,"\r"],[0,"\n    req"]],"start1":5658,"start2":5658,"length1":16,"length2":17},{"diffs":[[0,"(res) { "],[1,"\r"],[0,"\n       "]],"start1":5699,"start2":5699,"length1":16,"length2":17},{"diffs":[[0,"iled'});"],[1,"\r"],[0,"\n       "]],"start1":5795,"start2":5795,"length1":16,"length2":17},{"diffs":[[0,"ed'});\r\n        "],[1,"\r"],[0,"\n        // Grab"]],"start1":5797,"start2":5797,"length1":32,"length2":33},{"diffs":[[0,"eturn it"],[1,"\r"],[0,"\n       "]],"start1":5845,"start2":5845,"length1":16,"length2":17},{"diffs":[[0,"'etag'],"],[1,"\r"],[0,"\n       "]],"start1":5886,"start2":5886,"length1":16,"length2":17},{"diffs":[[0,"length};"],[1,"\r"],[0,"\n       "]],"start1":5956,"start2":5956,"length1":16,"length2":17},{"diffs":[[0,"ngth};\r\n        "],[1,"\r"],[0,"\n        mpu.emi"]],"start1":5958,"start2":5958,"length1":32,"length2":33},{"diffs":[[0,"oaded', result);"],[1,"\r"],[0,"\n        \n      "]],"start1":5997,"start2":5997,"length1":32,"length2":33},{"diffs":[[0,"sult);\r\n        "],[1,"\r"],[0,"\n        // Remo"]],"start1":6007,"start2":6007,"length1":32,"length2":33},{"diffs":[[0,"ary file"],[1,"\r"],[0,"\n       "]],"start1":6053,"start2":6053,"length1":16,"length2":17},{"diffs":[[0," function(err) {"],[1,"\r"],[0,"\n            ret"]],"start1":6095,"start2":6095,"length1":32,"length2":33},{"diffs":[[0,"ck(err, result);"],[1,"\r"],[0,"\n        });    "]],"start1":6138,"start2":6138,"length1":32,"length2":33},{"diffs":[[0,"        "],[1,"\r"],[0,"\n    });"],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n    // "]],"start1":6167,"start2":6167,"length1":29,"length2":32},{"diffs":[[0,"e errors"],[1,"\r"],[0,"\n    req"]],"start1":6204,"start2":6204,"length1":16,"length2":17},{"diffs":[[0,"n(err) {"],[1,"\r"],[0,"\n       "]],"start1":6241,"start2":6241,"length1":16,"length2":17},{"diffs":[[0,"e: err};"],[1,"\r"],[0,"\n       "]],"start1":6294,"start2":6294,"length1":16,"length2":17},{"diffs":[[0,"d', result);"],[1,"\r"],[0,"\n        ret"]],"start1":6327,"start2":6327,"length1":24,"length2":25},{"diffs":[[0,"lt);"],[1,"\r"],[0,"\n    });"],[1,"\r"],[0,"\n      "],[1,"\r"],[0,"\n   "]],"start1":6369,"start2":6369,"length1":23,"length2":26},{"diffs":[[0,"pe(req);"],[1,"\r"],[0,"\n    mpu"]],"start1":6409,"start2":6409,"length1":16,"length2":17},{"diffs":[[0,"id);"],[1,"\r"],[0,"\n}"],[-1,"\n"],[1,"\r\n\r"],[0,"\n/**"],[1,"\r"],[0,"\n  I"]],"start1":6450,"start2":6450,"length1":15,"length2":19},{"diffs":[[0,"mpletion"],[1,"\r"],[0,"\n **/"],[1,"\r"],[0,"\nMultiPa"]],"start1":6543,"start2":6543,"length1":21,"length2":23},{"diffs":[[0,"k) {    "],[1,"\r"],[0,"\n    "],[1,"\r"],[0,"\n    var"]],"start1":6620,"start2":6620,"length1":21,"length2":23},{"diffs":[[0,"his;    "],[-1,"\n"],[1,"\r\n\r"],[0,"\n    thi"]],"start1":6651,"start2":6651,"length1":17,"length2":19},{"diffs":[[0,"sults) {"],[1,"\r"],[0,"\n       "]],"start1":6700,"start2":6700,"length1":16,"length2":17},{"diffs":[[0,"lts) {\r\n        "],[1,"\r"],[0,"\n        if (err"]],"start1":6702,"start2":6702,"length1":32,"length2":33},{"diffs":[[0,"ck(err);"],[1,"\r"],[0,"\n       "]],"start1":6750,"start2":6750,"length1":16,"length2":17},{"diffs":[[0,"(err);\r\n        "],[1,"\r"],[0,"\n        var siz"]],"start1":6752,"start2":6752,"length1":32,"length2":33},{"diffs":[[0,"s, body;"],[1,"\r"],[0,"\n       "]],"start1":6796,"start2":6796,"length1":16,"length2":17},{"diffs":[[0,"value) {"],[1,"\r"],[0,"\n       "]],"start1":6846,"start2":6846,"length1":16,"length2":17},{"diffs":[[0," value.size;"],[1,"\r"],[0,"\n           "]],"start1":6875,"start2":6875,"length1":24,"length2":25},{"diffs":[[0,"e.etag);"],[1,"\r"],[0,"\n       "]],"start1":6995,"start2":6995,"length1":16,"length2":17},{"diffs":[[0,"oin('');"],[1,"\r"],[0,"\n       "]],"start1":7017,"start2":7017,"length1":16,"length2":17},{"diffs":[[0,"n('');\r\n        "],[1,"\r"],[0,"\n        var req"]],"start1":7019,"start2":7019,"length1":32,"length2":33},{"diffs":[[0,"loadId);"],[1,"\r"],[0,"\n       "]],"start1":7120,"start2":7120,"length1":16,"length2":17},{"diffs":[[0,"adId);\r\n        "],[1,"\r"],[0,"\n        // Regi"]],"start1":7122,"start2":7122,"length1":32,"length2":33},{"diffs":[[0," handler"],[1,"\r"],[0,"\n       "]],"start1":7172,"start2":7172,"length1":16,"length2":17},{"diffs":[[0," body) {"],[1,"\r"],[0,"\n       "]],"start1":7226,"start2":7226,"length1":16,"length2":17},{"diffs":[[0,"ck(err);        "],[1,"\r"],[0,"\n            del"]],"start1":7270,"start2":7270,"length1":32,"length2":33},{"diffs":[[0," body.$;"],[1,"\r"],[0,"\n       "]],"start1":7306,"start2":7306,"length1":16,"length2":17},{"diffs":[[0," = size;"],[1,"\r"],[0,"\n       "]],"start1":7337,"start2":7337,"length1":16,"length2":17},{"diffs":[[0,"mpleted', body);"],[1,"\r"],[0,"\n            ret"]],"start1":7371,"start2":7371,"length1":32,"length2":33},{"diffs":[[0,", body);"],[1,"\r"],[0,"\n       "]],"start1":7421,"start2":7421,"length1":16,"length2":17},{"diffs":[[0,"     });"],[1,"\r"],[0,"\n       "]],"start1":7434,"start2":7434,"length1":16,"length2":17},{"diffs":[[0,"        "],[1,"\r"],[0,"\n       "]],"start1":7444,"start2":7444,"length1":16,"length2":17},{"diffs":[[0," request"],[1,"\r"],[0,"\n       "]],"start1":7474,"start2":7474,"length1":16,"length2":17},{"diffs":[[0,"load>');"],[1,"\r"],[0,"\n       "]],"start1":7562,"start2":7562,"length1":16,"length2":17},{"diffs":[[0,"q.end();"],[1,"\r"],[0,"\n    });"]],"start1":7582,"start2":7582,"length1":16,"length2":17},{"diffs":[[0,"    "],[1,"\r"],[0,"\n}"],[-1,"\n"],[1,"\r\n\r"],[0,"\nmod"]],"start1":7599,"start2":7599,"length1":11,"length2":14}]],"length":7643,"saved":false}
{"ts":1357773649115,"patch":[[{"diffs":[[0,"ent;\r\n\r\n    "],[-1,""],[0,""],[1,"function partReady(part) {\r\n        if (!part) return\r\n\r\n        // Ensure the stream is closed\r\n        if (part.stream.writable) {\r\n            part.stream.end();\r\n        }\r\n        mpu.uploads.push(mpu._uploadPart.bind(mpu, part));\r\n    }\r\n    \r\n    "],[0,"// Create a "]],"start1":3412,"start2":3412,"length1":24,"length2":278},{"diffs":[[0,"h + 1,\r\n"],[1,"            // use a bufferStream\r\n"],[0,"        "]],"start1":3758,"start2":3758,"length1":16,"length2":51},{"diffs":[[0,"    "],[-1,"return part;\r\n    }\r\n\r\n    function "],[0,"part"]],"start1":4184,"start2":4184,"length1":44,"length2":8},{"diffs":[[0," partReady(part)"],[-1," {"],[1,";"],[0,"\r\n        if (!p"]],"start1":4187,"start2":4187,"length1":34,"length2":33},{"diffs":[[0,"    "],[-1,"if (!part) return\r\n\r\n        // Ensure the stream is closed\r\n        if (part.stream.writable) {\r\n            part.stream.end();\r\n        }\r\n        mpu.uploads.push(mpu._uploadPart.bind(mpu,"],[1,"\r\n        return"],[0," part"],[-1,"))"],[0,";\r\n "]],"start1":4210,"start2":4210,"length1":206,"length2":29},{"diffs":[[0," {\r\n            "],[-1,""],[0,""],[1,"//"],[0,"partReady(curren"]],"start1":4557,"start2":4557,"length1":32,"length2":34}]],"length":7720,"saved":false}
{"ts":1357773762095,"patch":[[{"diffs":[[0,"partStream ="],[1," part,\r\n        //partStream ="],[0," fs.createRe"]],"start1":5632,"start2":5632,"length1":24,"length2":54},{"diffs":[[0,"y file\r\n"],[1,"        /*\r\n"],[0,"        "]],"start1":6162,"start2":6162,"length1":16,"length2":28},{"diffs":[[0," });        "],[1,"*/"],[0,"\r\n    });\r\n "]],"start1":6282,"start2":6282,"length1":24,"length2":26}]],"length":7764,"saved":false}
{"ts":1357773940942,"patch":[[{"diffs":[[0,"bufferStream"],[1," -> https://github.com/mikeal/morestreams/blob/master/main.js"],[0,"\r\n          "]],"start1":3787,"start2":3787,"length1":24,"length2":85}]],"length":7825,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357847532773,"patch":[[{"diffs":[[0,"e('util'),\r\n"],[1,"    BufferedStream = require('morestreams').BufferedStream\r\n"],[0,"    parse = "]],"start1":207,"start2":207,"length1":24,"length2":84}]],"length":7885,"saved":false}
{"ts":1357847737126,"patch":[[{"diffs":[[0,"js\r\n            "],[1,"//"],[0,"partFileName = p"]],"start1":3918,"start2":3918,"length1":32,"length2":34},{"diffs":[[0,"            "],[1,"//"],[0,"partFile = f"]],"start1":4044,"start2":4044,"length1":24,"length2":26},{"diffs":[[0,"partFileName),\r\n"],[1,"            partFileName = 'mpu-' + (mpu.uploadId || Date.now()) + '-' + partId,\r\n"],[0,"            part"]],"start1":4090,"start2":4090,"length1":32,"length2":114},{"diffs":[[0,"stream: "],[-1,"partFile"],[1,"new BufferedStream()"],[0,",\r\n     "]],"start1":4255,"start2":4255,"length1":24,"length2":36}]],"length":7983,"saved":false}
{"ts":1357851935669,"patch":[[{"diffs":[[0,"),\r\n"],[-1,"    path = require('path'),\r\n    os = require('os'),\r\n"],[0,"    "]],"start1":132,"start2":132,"length1":62,"length2":8}]],"length":7929,"saved":false}
{"ts":1357851958391,"patch":[[{"diffs":[[0,"fferedStream"],[1,","],[0,"\r\n    parse "]],"start1":211,"start2":211,"length1":24,"length2":25}]],"length":7930,"saved":false}
{"ts":1357852013678,"patch":[[{"diffs":[[0,"if ("],[-1,"!"],[0,"part) "],[-1,"return\r\n\r\n"],[1,"{\r\n    "],[0,"    "]],"start1":3467,"start2":3467,"length1":25,"length2":21},{"diffs":[[0,"closed\r\n        "],[1,"    "],[0,"if (part.stream."]],"start1":3516,"start2":3516,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"   "],[1," "],[0,"part.stream."]],"start1":3565,"start2":3565,"length1":24,"length2":28},{"diffs":[[0,"end();\r\n        "],[-1,"}\r\n"],[1,"    }\r\n    "],[0,"        mpu.uplo"]],"start1":3593,"start2":3593,"length1":35,"length2":43},{"diffs":[[0,"u, part));\r\n"],[1,"        }\r\n"],[0,"    }\r\n    \r"]],"start1":3668,"start2":3668,"length1":24,"length2":35}]],"length":7953,"saved":false}
{"ts":1357852030458,"patch":[[{"diffs":[[0,"1,\r\n"],[-1,"            // use a bufferStream -> https://github.com/mikeal/morestreams/blob/master/main.js\r\n            //partFileName = path.resolve(path.join(os.tmpDir(), 'mpu-' + (mpu.uploadId || Date.now()) + '-' + partId)),\r\n            //partFile = fs.createWriteStream(partFileName),\r\n"],[0,"    "]],"start1":3792,"start2":3792,"length1":288,"length2":8}]],"length":7673,"saved":false}
{"ts":1357852053767,"patch":[[{"diffs":[[0,"ts.push(part);\r\n"],[1,"        \r\n        // Start piping to S3 asap\r\n"],[0,"        partRead"]],"start1":4073,"start2":4073,"length1":32,"length2":78}]],"length":7719,"saved":false}
{"ts":1357852335915,"patch":[[{"diffs":[[0,"    "],[-1,"// Remove the temporary file\r\n        /*\r\n        fs.unlink(part.fileName, function(err) {\r\n    "],[1,"delete part.stream;\r\n"],[0,"    "]],"start1":6091,"start2":6091,"length1":104,"length2":29},{"diffs":[[0,"allback("],[-1,"err"],[1,"null"],[0,", result"]],"start1":6132,"start2":6132,"length1":19,"length2":20},{"diffs":[[0,");\r\n"],[-1,"        });        */\r\n"],[0,"    "]],"start1":6152,"start2":6152,"length1":31,"length2":8}]],"length":7622,"saved":false}
{"ts":1357852499678,"patch":[[{"diffs":[[0,"),\r\n"],[-1,"        partStream = part,\r\n        //partStream = fs.createReadStream(part.fileName),\r\n"],[0,"    "]],"start1":5575,"start2":5575,"length1":96,"length2":8},{"diffs":[[0,"    part"],[-1,"S"],[1,".s"],[0,"tream.pi"]],"start1":6283,"start2":6283,"length1":17,"length2":18}]],"length":7535,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357922481474,"patch":[[{"diffs":[[0,"rt);\r\n        \r\n"],[1,"        \r\n"],[0,"        // Start"]],"start1":4083,"start2":4083,"length1":32,"length2":42}]],"length":7545,"saved":false}
